# -*- coding: utf-8 -*-
"""image generator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NuFX0I4vvdEvyL4Cje21VYQB_UHbJpyA
"""

!pip install diffusers transformers torch accelerate

from diffusers import StableDiffusionPipeline
import torch
from tqdm import tqdm

# Load the Stable Diffusion model from Hugging Face
model_id = "CompVis/stable-diffusion-v1-4"
device = "cuda" if torch.cuda.is_available() else "cpu"

# Create the pipeline with a progress bar
pipe = StableDiffusionPipeline.from_pretrained(model_id)
pipe = pipe.to(device)

# Generate an image from a prompt
prompt = "a beautiful landscape with mountains and a river during sunset"

# Display progress bar
print("Generating image...")
with torch.autocast("cuda"):
    for _ in tqdm(range(1), desc="Generating"):
        image = pipe(prompt).images[0]

# Save the image
image.save("generated_image.png")

# Display the image
image.show()

print("Image generation completed.")

prompt = "ben 10 with grandpa"

# Display progress bar
print("Generating image...")
with torch.autocast("cuda"):
    for _ in tqdm(range(1), desc="Generating"):
        image = pipe(prompt).images[0]

# Save the image
image.save("generated_image.png")

# Display the image
image.show()

print("Image generation completed.")

!pip install diffusers transformers torch accelerate

from diffusers import StableDiffusionPipeline
import torch

# Load the Stable Diffusion model from Hugging Face
model_id = "CompVis/stable-diffusion-v1-4"
device = "cuda" if torch.cuda.is_available() else "cpu"

# Create the pipeline with optimizations
pipe = StableDiffusionPipeline.from_pretrained(model_id, torch_dtype=torch.float16)
pipe = pipe.to(device)

# Function to generate an image
def generate_image(prompt):
    with torch.autocast("cuda"):
        image = pipe(prompt, num_inference_steps=20).images[0]  # Reduce inference steps for speed
    return image

prompt = input("Enter your prompt: ")

# Generate and display the image
print("Generating image...")
image = generate_image(prompt)

# Save the image
image.save("generated_image.png")

# Display the image
image.show()
print("Image generation completed.")